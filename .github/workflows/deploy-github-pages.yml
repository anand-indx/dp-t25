name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install Jupyter and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install jupyter nbconvert jupyterlab jupyterlite-core
          
      - name: Convert notebooks to HTML
        run: |
          # Convert all notebooks to HTML for static preview
          find notebooks -name "*.ipynb" -not -path "*/.ipynb_checkpoints/*" | while read notebook; do
            echo "Converting $notebook"
            jupyter nbconvert --to html "$notebook" --output-dir "$(dirname "$notebook")/html/"
          done
          
          # Create index files for each tutorial directory
          mkdir -p notebooks/image-processing-tutorials/html
          mkdir -p notebooks/visualization-tutorials/html

      - name: Build JupyterLite
        run: |
          # Build JupyterLite to a temporary directory first
          jupyter lite build --contents notebooks --output-dir jupyterlite-build || echo "Build completed with warnings"
          
          # Verify the build succeeded
          if [ ! -f "jupyterlite-build/index.html" ]; then
            echo "JupyterLite build failed - index.html not found"
            exit 1
          fi
          
          echo "JupyterLite build completed successfully"
          echo "Files in jupyterlite-build:"
          ls -la jupyterlite-build/
          echo "Files in jupyterlite-build/files:"
          ls -la jupyterlite-build/files/ || echo "No files directory found"

      - name: Install dependencies
        run: |
          cd apps/frontend
          npm install --no-audit

      - name: Build frontend
        run: |
          cd apps/frontend
          npm run build
          
      - name: Copy JupyterLite and notebooks to frontend build
        run: |
          # Copy JupyterLite build to frontend dist/lite
          mkdir -p apps/frontend/dist/lite
          cp -r jupyterlite-build/* apps/frontend/dist/lite/
          
          # Also copy raw notebooks for backup access
          mkdir -p apps/frontend/dist/notebooks
          cp -r notebooks/* apps/frontend/dist/notebooks/
          
          echo "Final structure:"
          echo "apps/frontend/dist/lite:"
          ls -la apps/frontend/dist/lite/
          echo "apps/frontend/dist/lite/files:"
          ls -la apps/frontend/dist/lite/files/ || echo "No files directory"

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: 'apps/frontend/dist'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
